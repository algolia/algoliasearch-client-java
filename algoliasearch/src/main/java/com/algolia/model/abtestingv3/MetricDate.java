// Code generated by OpenAPI Generator (https://openapi-generator.tech), manual changes will be lost
// - read more on https://github.com/algolia/api-clients-automation. DO NOT EDIT.

package com.algolia.model.abtestingv3;

import com.fasterxml.jackson.annotation.*;
import com.fasterxml.jackson.databind.annotation.*;
import java.util.ArrayList;
import java.util.List;
import java.util.Objects;

/** MetricDate */
public class MetricDate {

  @JsonProperty("date")
  private String date;

  @JsonProperty("metrics")
  private List<MetricResult> metrics;

  public MetricDate setDate(String date) {
    this.date = date;
    return this;
  }

  /** Date where the metric was updated, in RFC 3339 format. */
  @javax.annotation.Nullable
  public String getDate() {
    return date;
  }

  public MetricDate setMetrics(List<MetricResult> metrics) {
    this.metrics = metrics;
    return this;
  }

  public MetricDate addMetrics(MetricResult metricsItem) {
    if (this.metrics == null) {
      this.metrics = new ArrayList<>();
    }
    this.metrics.add(metricsItem);
    return this;
  }

  /** All ABTest metrics that were defined during test creation. */
  @javax.annotation.Nullable
  public List<MetricResult> getMetrics() {
    return metrics;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    MetricDate metricDate = (MetricDate) o;
    return Objects.equals(this.date, metricDate.date) && Objects.equals(this.metrics, metricDate.metrics);
  }

  @Override
  public int hashCode() {
    return Objects.hash(date, metrics);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class MetricDate {\n");
    sb.append("    date: ").append(toIndentedString(date)).append("\n");
    sb.append("    metrics: ").append(toIndentedString(metrics)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}
