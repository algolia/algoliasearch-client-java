// Code generated by OpenAPI Generator (https://openapi-generator.tech), manual changes will be lost
// - read more on https://github.com/algolia/api-clients-automation. DO NOT EDIT.

package com.algolia.model.abtestingv3;

import com.fasterxml.jackson.annotation.*;
import com.fasterxml.jackson.databind.annotation.*;
import java.util.ArrayList;
import java.util.List;
import java.util.Objects;

/**
 * A/B test configuration for estimating the sample size and duration using minimum detectable
 * effect.
 */
public class EstimateConfiguration {

  @JsonProperty("filters")
  private List<MetricsFilter> filters;

  @JsonProperty("minimumDetectableEffect")
  private MinimumDetectableEffect minimumDetectableEffect;

  public EstimateConfiguration setFilters(List<MetricsFilter> filters) {
    this.filters = filters;
    return this;
  }

  public EstimateConfiguration addFilters(MetricsFilter filtersItem) {
    if (this.filters == null) {
      this.filters = new ArrayList<>();
    }
    this.filters.add(filtersItem);
    return this;
  }

  /** List of metric filters applied to the test population. */
  @javax.annotation.Nullable
  public List<MetricsFilter> getFilters() {
    return filters;
  }

  public EstimateConfiguration setMinimumDetectableEffect(MinimumDetectableEffect minimumDetectableEffect) {
    this.minimumDetectableEffect = minimumDetectableEffect;
    return this;
  }

  /** Get minimumDetectableEffect */
  @javax.annotation.Nonnull
  public MinimumDetectableEffect getMinimumDetectableEffect() {
    return minimumDetectableEffect;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    EstimateConfiguration estimateConfiguration = (EstimateConfiguration) o;
    return (
      Objects.equals(this.filters, estimateConfiguration.filters) &&
      Objects.equals(this.minimumDetectableEffect, estimateConfiguration.minimumDetectableEffect)
    );
  }

  @Override
  public int hashCode() {
    return Objects.hash(filters, minimumDetectableEffect);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class EstimateConfiguration {\n");
    sb.append("    filters: ").append(toIndentedString(filters)).append("\n");
    sb.append("    minimumDetectableEffect: ").append(toIndentedString(minimumDetectableEffect)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}
