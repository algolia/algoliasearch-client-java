// Code generated by OpenAPI Generator (https://openapi-generator.tech), manual changes will be lost
// - read more on https://github.com/algolia/api-clients-automation. DO NOT EDIT.

package com.algolia.model.recommend;

import com.fasterxml.jackson.annotation.*;
import com.fasterxml.jackson.databind.annotation.*;
import java.util.Objects;

/** LookingSimilar */
public class LookingSimilar {

  @JsonProperty("model")
  private LookingSimilarModel model;

  @JsonProperty("objectID")
  private String objectID;

  @JsonProperty("fallbackParameters")
  private FallbackParams fallbackParameters;

  public LookingSimilar setModel(LookingSimilarModel model) {
    this.model = model;
    return this;
  }

  /** Get model */
  @javax.annotation.Nonnull
  public LookingSimilarModel getModel() {
    return model;
  }

  public LookingSimilar setObjectID(String objectID) {
    this.objectID = objectID;
    return this;
  }

  /** Unique record identifier. */
  @javax.annotation.Nonnull
  public String getObjectID() {
    return objectID;
  }

  public LookingSimilar setFallbackParameters(FallbackParams fallbackParameters) {
    this.fallbackParameters = fallbackParameters;
    return this;
  }

  /** Get fallbackParameters */
  @javax.annotation.Nullable
  public FallbackParams getFallbackParameters() {
    return fallbackParameters;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    LookingSimilar lookingSimilar = (LookingSimilar) o;
    return (
      Objects.equals(this.model, lookingSimilar.model) &&
      Objects.equals(this.objectID, lookingSimilar.objectID) &&
      Objects.equals(this.fallbackParameters, lookingSimilar.fallbackParameters)
    );
  }

  @Override
  public int hashCode() {
    return Objects.hash(model, objectID, fallbackParameters);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class LookingSimilar {\n");
    sb.append("    model: ").append(toIndentedString(model)).append("\n");
    sb.append("    objectID: ").append(toIndentedString(objectID)).append("\n");
    sb.append("    fallbackParameters: ").append(toIndentedString(fallbackParameters)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}
