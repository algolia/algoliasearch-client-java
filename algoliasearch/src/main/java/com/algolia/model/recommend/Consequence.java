// Code generated by OpenAPI Generator (https://openapi-generator.tech), manual changes will be lost
// - read more on https://github.com/algolia/api-clients-automation. DO NOT EDIT.

package com.algolia.model.recommend;

import com.fasterxml.jackson.annotation.*;
import com.fasterxml.jackson.databind.annotation.*;
import java.util.ArrayList;
import java.util.List;
import java.util.Objects;

/** Effect of the rule. */
public class Consequence {

  @JsonProperty("hide")
  private List<HideConsequenceObject> hide;

  @JsonProperty("promote")
  private List<PromoteConsequenceObject> promote;

  @JsonProperty("params")
  private ParamsConsequence params;

  public Consequence setHide(List<HideConsequenceObject> hide) {
    this.hide = hide;
    return this;
  }

  public Consequence addHide(HideConsequenceObject hideItem) {
    if (this.hide == null) {
      this.hide = new ArrayList<>();
    }
    this.hide.add(hideItem);
    return this;
  }

  /** Exclude items from recommendations. */
  @javax.annotation.Nullable
  public List<HideConsequenceObject> getHide() {
    return hide;
  }

  public Consequence setPromote(List<PromoteConsequenceObject> promote) {
    this.promote = promote;
    return this;
  }

  public Consequence addPromote(PromoteConsequenceObject promoteItem) {
    if (this.promote == null) {
      this.promote = new ArrayList<>();
    }
    this.promote.add(promoteItem);
    return this;
  }

  /** Place items at specific positions in the list of recommendations. */
  @javax.annotation.Nullable
  public List<PromoteConsequenceObject> getPromote() {
    return promote;
  }

  public Consequence setParams(ParamsConsequence params) {
    this.params = params;
    return this;
  }

  /** Get params */
  @javax.annotation.Nullable
  public ParamsConsequence getParams() {
    return params;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Consequence consequence = (Consequence) o;
    return (
      Objects.equals(this.hide, consequence.hide) &&
      Objects.equals(this.promote, consequence.promote) &&
      Objects.equals(this.params, consequence.params)
    );
  }

  @Override
  public int hashCode() {
    return Objects.hash(hide, promote, params);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Consequence {\n");
    sb.append("    hide: ").append(toIndentedString(hide)).append("\n");
    sb.append("    promote: ").append(toIndentedString(promote)).append("\n");
    sb.append("    params: ").append(toIndentedString(params)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}
