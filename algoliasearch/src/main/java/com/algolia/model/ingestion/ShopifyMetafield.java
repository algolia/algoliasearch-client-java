// Code generated by OpenAPI Generator (https://openapi-generator.tech), manual changes will be lost
// - read more on https://github.com/algolia/api-clients-automation. DO NOT EDIT.

package com.algolia.model.ingestion;

import com.fasterxml.jackson.annotation.*;
import com.fasterxml.jackson.databind.annotation.*;
import java.util.Objects;

/** Represents a metafield in Shopify. */
public class ShopifyMetafield {

  @JsonProperty("namespace")
  private String namespace;

  @JsonProperty("key")
  private String key;

  @JsonProperty("value")
  private String value;

  public ShopifyMetafield setNamespace(String namespace) {
    this.namespace = namespace;
    return this;
  }

  /** Get namespace */
  @javax.annotation.Nonnull
  public String getNamespace() {
    return namespace;
  }

  public ShopifyMetafield setKey(String key) {
    this.key = key;
    return this;
  }

  /** Get key */
  @javax.annotation.Nonnull
  public String getKey() {
    return key;
  }

  public ShopifyMetafield setValue(String value) {
    this.value = value;
    return this;
  }

  /** Get value */
  @javax.annotation.Nonnull
  public String getValue() {
    return value;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ShopifyMetafield shopifyMetafield = (ShopifyMetafield) o;
    return (
      Objects.equals(this.namespace, shopifyMetafield.namespace) &&
      Objects.equals(this.key, shopifyMetafield.key) &&
      Objects.equals(this.value, shopifyMetafield.value)
    );
  }

  @Override
  public int hashCode() {
    return Objects.hash(namespace, key, value);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ShopifyMetafield {\n");
    sb.append("    namespace: ").append(toIndentedString(namespace)).append("\n");
    sb.append("    key: ").append(toIndentedString(key)).append("\n");
    sb.append("    value: ").append(toIndentedString(value)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}
