// Code generated by OpenAPI Generator (https://openapi-generator.tech), manual changes will be lost
// - read more on https://github.com/algolia/api-clients-automation. DO NOT EDIT.

package com.algolia.model.ingestion;

import com.fasterxml.jackson.annotation.*;
import com.fasterxml.jackson.databind.annotation.*;
import java.util.ArrayList;
import java.util.List;
import java.util.Objects;

/** TransformationSearch */
public class TransformationSearch {

  @JsonProperty("transformationIDs")
  private List<String> transformationIDs;

  public TransformationSearch setTransformationIDs(List<String> transformationIDs) {
    this.transformationIDs = transformationIDs;
    return this;
  }

  public TransformationSearch addTransformationIDs(String transformationIDsItem) {
    if (this.transformationIDs == null) {
      this.transformationIDs = new ArrayList<>();
    }
    this.transformationIDs.add(transformationIDsItem);
    return this;
  }

  /** Get transformationIDs */
  @javax.annotation.Nullable
  public List<String> getTransformationIDs() {
    return transformationIDs;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TransformationSearch transformationSearch = (TransformationSearch) o;
    return Objects.equals(this.transformationIDs, transformationSearch.transformationIDs);
  }

  @Override
  public int hashCode() {
    return Objects.hash(transformationIDs);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TransformationSearch {\n");
    sb.append("    transformationIDs: ").append(toIndentedString(transformationIDs)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}
