// Code generated by OpenAPI Generator (https://openapi-generator.tech), manual changes will be lost
// - read more on https://github.com/algolia/api-clients-automation. DO NOT EDIT.

package com.algolia.model.ingestion;

import com.fasterxml.jackson.annotation.*;
import com.fasterxml.jackson.databind.annotation.*;
import java.util.ArrayList;
import java.util.List;
import java.util.Objects;

/** Represents the required elements of the task input when using a `shopify` source. */
@JsonDeserialize(as = ShopifyInput.class)
public class ShopifyInput implements TaskInput {

  @JsonProperty("metafields")
  private List<ShopifyMetafield> metafields = new ArrayList<>();

  @JsonProperty("market")
  private ShopifyMarket market;

  public ShopifyInput setMetafields(List<ShopifyMetafield> metafields) {
    this.metafields = metafields;
    return this;
  }

  public ShopifyInput addMetafields(ShopifyMetafield metafieldsItem) {
    this.metafields.add(metafieldsItem);
    return this;
  }

  /** Get metafields */
  @javax.annotation.Nonnull
  public List<ShopifyMetafield> getMetafields() {
    return metafields;
  }

  public ShopifyInput setMarket(ShopifyMarket market) {
    this.market = market;
    return this;
  }

  /** Get market */
  @javax.annotation.Nonnull
  public ShopifyMarket getMarket() {
    return market;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ShopifyInput shopifyInput = (ShopifyInput) o;
    return Objects.equals(this.metafields, shopifyInput.metafields) && Objects.equals(this.market, shopifyInput.market);
  }

  @Override
  public int hashCode() {
    return Objects.hash(metafields, market);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ShopifyInput {\n");
    sb.append("    metafields: ").append(toIndentedString(metafields)).append("\n");
    sb.append("    market: ").append(toIndentedString(market)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}
