// Code generated by OpenAPI Generator (https://openapi-generator.tech), manual changes will be lost
// - read more on https://github.com/algolia/api-clients-automation. DO NOT EDIT.

package com.algolia.model.ingestion;

import com.fasterxml.jackson.annotation.*;
import com.fasterxml.jackson.databind.annotation.*;
import java.util.Objects;

/** RunProgress */
public class RunProgress {

  @JsonProperty("expectedNbOfEvents")
  private Integer expectedNbOfEvents;

  @JsonProperty("receivedNbOfEvents")
  private Integer receivedNbOfEvents;

  public RunProgress setExpectedNbOfEvents(Integer expectedNbOfEvents) {
    this.expectedNbOfEvents = expectedNbOfEvents;
    return this;
  }

  /** Get expectedNbOfEvents */
  @javax.annotation.Nullable
  public Integer getExpectedNbOfEvents() {
    return expectedNbOfEvents;
  }

  public RunProgress setReceivedNbOfEvents(Integer receivedNbOfEvents) {
    this.receivedNbOfEvents = receivedNbOfEvents;
    return this;
  }

  /** Get receivedNbOfEvents */
  @javax.annotation.Nullable
  public Integer getReceivedNbOfEvents() {
    return receivedNbOfEvents;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    RunProgress runProgress = (RunProgress) o;
    return (
      Objects.equals(this.expectedNbOfEvents, runProgress.expectedNbOfEvents) &&
      Objects.equals(this.receivedNbOfEvents, runProgress.receivedNbOfEvents)
    );
  }

  @Override
  public int hashCode() {
    return Objects.hash(expectedNbOfEvents, receivedNbOfEvents);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class RunProgress {\n");
    sb.append("    expectedNbOfEvents: ").append(toIndentedString(expectedNbOfEvents)).append("\n");
    sb.append("    receivedNbOfEvents: ").append(toIndentedString(receivedNbOfEvents)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}
