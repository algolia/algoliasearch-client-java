// Code generated by OpenAPI Generator (https://openapi-generator.tech), manual changes will be lost
// - read more on https://github.com/algolia/api-clients-automation. DO NOT EDIT.

package com.algolia.model.ingestion;

import com.fasterxml.jackson.annotation.*;
import com.fasterxml.jackson.databind.annotation.*;
import java.util.Objects;

/** Credentials for authenticating with a Google service account, such as BigQuery. */
@JsonDeserialize(as = AuthGoogleServiceAccountPartial.class)
public class AuthGoogleServiceAccountPartial implements AuthInputPartial {

  @JsonProperty("clientEmail")
  private String clientEmail;

  @JsonProperty("privateKey")
  private String privateKey;

  public AuthGoogleServiceAccountPartial setClientEmail(String clientEmail) {
    this.clientEmail = clientEmail;
    return this;
  }

  /** Email address of the Google service account. */
  @javax.annotation.Nullable
  public String getClientEmail() {
    return clientEmail;
  }

  public AuthGoogleServiceAccountPartial setPrivateKey(String privateKey) {
    this.privateKey = privateKey;
    return this;
  }

  /** Private key of the Google service account. This field is `null` in the API response. */
  @javax.annotation.Nullable
  public String getPrivateKey() {
    return privateKey;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AuthGoogleServiceAccountPartial authGoogleServiceAccountPartial = (AuthGoogleServiceAccountPartial) o;
    return (
      Objects.equals(this.clientEmail, authGoogleServiceAccountPartial.clientEmail) &&
      Objects.equals(this.privateKey, authGoogleServiceAccountPartial.privateKey)
    );
  }

  @Override
  public int hashCode() {
    return Objects.hash(clientEmail, privateKey);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AuthGoogleServiceAccountPartial {\n");
    sb.append("    clientEmail: ").append(toIndentedString(clientEmail)).append("\n");
    sb.append("    privateKey: ").append(toIndentedString(privateKey)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}
