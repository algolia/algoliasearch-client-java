// Code generated by OpenAPI Generator (https://openapi-generator.tech), manual changes will be lost
// - read more on https://github.com/algolia/api-clients-automation. DO NOT EDIT.

package com.algolia.model.ingestion;

import com.fasterxml.jackson.annotation.*;
import com.fasterxml.jackson.databind.annotation.*;
import java.util.Objects;

/** Authentication input for OAuth login. */
@JsonDeserialize(as = AuthOAuth.class)
public class AuthOAuth implements AuthInput {

  @JsonProperty("url")
  private String url;

  @JsonProperty("client_id")
  private String clientId;

  @JsonProperty("client_secret")
  private String clientSecret;

  public AuthOAuth setUrl(String url) {
    this.url = url;
    return this;
  }

  /** The OAuth endpoint URL. */
  @javax.annotation.Nonnull
  public String getUrl() {
    return url;
  }

  public AuthOAuth setClientId(String clientId) {
    this.clientId = clientId;
    return this;
  }

  /** The clientID. */
  @javax.annotation.Nonnull
  public String getClientId() {
    return clientId;
  }

  public AuthOAuth setClientSecret(String clientSecret) {
    this.clientSecret = clientSecret;
    return this;
  }

  /** The secret. */
  @javax.annotation.Nonnull
  public String getClientSecret() {
    return clientSecret;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AuthOAuth authOAuth = (AuthOAuth) o;
    return (
      Objects.equals(this.url, authOAuth.url) &&
      Objects.equals(this.clientId, authOAuth.clientId) &&
      Objects.equals(this.clientSecret, authOAuth.clientSecret)
    );
  }

  @Override
  public int hashCode() {
    return Objects.hash(url, clientId, clientSecret);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AuthOAuth {\n");
    sb.append("    url: ").append(toIndentedString(url)).append("\n");
    sb.append("    clientId: ").append(toIndentedString(clientId)).append("\n");
    sb.append("    clientSecret: ").append(toIndentedString(clientSecret)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}
