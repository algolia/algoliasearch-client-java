// Code generated by OpenAPI Generator (https://openapi-generator.tech), manual changes will be lost
// - read more on https://github.com/algolia/api-clients-automation. DO NOT EDIT.

package com.algolia.model.ingestion;

import com.fasterxml.jackson.annotation.*;
import com.fasterxml.jackson.databind.annotation.*;
import java.util.Objects;

/** SourceUpdateResponse */
public class SourceUpdateResponse {

  @JsonProperty("sourceID")
  private String sourceID;

  @JsonProperty("name")
  private String name;

  @JsonProperty("updatedAt")
  private String updatedAt;

  public SourceUpdateResponse setSourceID(String sourceID) {
    this.sourceID = sourceID;
    return this;
  }

  /** Universally uniqud identifier (UUID) of a source. */
  @javax.annotation.Nonnull
  public String getSourceID() {
    return sourceID;
  }

  public SourceUpdateResponse setName(String name) {
    this.name = name;
    return this;
  }

  /** Descriptive name of the source. */
  @javax.annotation.Nonnull
  public String getName() {
    return name;
  }

  public SourceUpdateResponse setUpdatedAt(String updatedAt) {
    this.updatedAt = updatedAt;
    return this;
  }

  /** Date of last update in RFC3339 format. */
  @javax.annotation.Nonnull
  public String getUpdatedAt() {
    return updatedAt;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SourceUpdateResponse sourceUpdateResponse = (SourceUpdateResponse) o;
    return (
      Objects.equals(this.sourceID, sourceUpdateResponse.sourceID) &&
      Objects.equals(this.name, sourceUpdateResponse.name) &&
      Objects.equals(this.updatedAt, sourceUpdateResponse.updatedAt)
    );
  }

  @Override
  public int hashCode() {
    return Objects.hash(sourceID, name, updatedAt);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SourceUpdateResponse {\n");
    sb.append("    sourceID: ").append(toIndentedString(sourceID)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    updatedAt: ").append(toIndentedString(updatedAt)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}
