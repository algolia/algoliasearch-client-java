// Code generated by OpenAPI Generator (https://openapi-generator.tech), manual changes will be lost
// - read more on https://github.com/algolia/api-clients-automation. DO NOT EDIT.

package com.algolia.model.ingestion;

import com.fasterxml.jackson.annotation.*;
import com.fasterxml.jackson.databind.annotation.*;
import java.util.ArrayList;
import java.util.List;
import java.util.Objects;

/** ListSourcesResponse */
public class ListSourcesResponse {

  @JsonProperty("sources")
  private List<Source> sources = new ArrayList<>();

  @JsonProperty("pagination")
  private Pagination pagination;

  public ListSourcesResponse setSources(List<Source> sources) {
    this.sources = sources;
    return this;
  }

  public ListSourcesResponse addSources(Source sourcesItem) {
    this.sources.add(sourcesItem);
    return this;
  }

  /** Get sources */
  @javax.annotation.Nonnull
  public List<Source> getSources() {
    return sources;
  }

  public ListSourcesResponse setPagination(Pagination pagination) {
    this.pagination = pagination;
    return this;
  }

  /** Get pagination */
  @javax.annotation.Nonnull
  public Pagination getPagination() {
    return pagination;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ListSourcesResponse listSourcesResponse = (ListSourcesResponse) o;
    return Objects.equals(this.sources, listSourcesResponse.sources) && Objects.equals(this.pagination, listSourcesResponse.pagination);
  }

  @Override
  public int hashCode() {
    return Objects.hash(sources, pagination);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ListSourcesResponse {\n");
    sb.append("    sources: ").append(toIndentedString(sources)).append("\n");
    sb.append("    pagination: ").append(toIndentedString(pagination)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}
