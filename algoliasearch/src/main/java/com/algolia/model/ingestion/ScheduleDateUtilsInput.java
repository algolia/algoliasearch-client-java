// Code generated by OpenAPI Generator (https://openapi-generator.tech), manual changes will be lost
// - read more on https://github.com/algolia/api-clients-automation. DO NOT EDIT.

package com.algolia.model.ingestion;

import com.fasterxml.jackson.annotation.*;
import com.fasterxml.jackson.databind.annotation.*;
import java.util.Objects;

/**
 * Input for scheduled tasks whose source is of type `bigquery` and for which extracted data spans a
 * fixed number of days.
 */
@JsonDeserialize(as = ScheduleDateUtilsInput.class)
public class ScheduleDateUtilsInput implements TaskInput {

  @JsonProperty("timeframe")
  private Integer timeframe;

  @JsonProperty("mapping")
  private MappingInput mapping;

  public ScheduleDateUtilsInput setTimeframe(Integer timeframe) {
    this.timeframe = timeframe;
    return this;
  }

  /**
   * Number of days in the past until the current day for which to extract Big Query data. minimum:
   * 1 maximum: 30
   */
  @javax.annotation.Nonnull
  public Integer getTimeframe() {
    return timeframe;
  }

  public ScheduleDateUtilsInput setMapping(MappingInput mapping) {
    this.mapping = mapping;
    return this;
  }

  /** Get mapping */
  @javax.annotation.Nullable
  public MappingInput getMapping() {
    return mapping;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ScheduleDateUtilsInput scheduleDateUtilsInput = (ScheduleDateUtilsInput) o;
    return Objects.equals(this.timeframe, scheduleDateUtilsInput.timeframe) && Objects.equals(this.mapping, scheduleDateUtilsInput.mapping);
  }

  @Override
  public int hashCode() {
    return Objects.hash(timeframe, mapping);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ScheduleDateUtilsInput {\n");
    sb.append("    timeframe: ").append(toIndentedString(timeframe)).append("\n");
    sb.append("    mapping: ").append(toIndentedString(mapping)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}
