// Code generated by OpenAPI Generator (https://openapi-generator.tech), manual changes will be lost
// - read more on https://github.com/algolia/api-clients-automation. DO NOT EDIT.

package com.algolia.model.ingestion;

import com.fasterxml.jackson.annotation.*;
import com.fasterxml.jackson.databind.annotation.*;
import java.util.ArrayList;
import java.util.List;
import java.util.Objects;

/** SourceValidateResponse */
public class SourceValidateResponse {

  @JsonProperty("runID")
  private String runID;

  @JsonProperty("data")
  private List<Object> data;

  @JsonProperty("events")
  private List<Event> events;

  @JsonProperty("message")
  private String message;

  public SourceValidateResponse setRunID(String runID) {
    this.runID = runID;
    return this;
  }

  /** Universally unique identifier (UUID) of a task run. */
  @javax.annotation.Nullable
  public String getRunID() {
    return runID;
  }

  public SourceValidateResponse setData(List<Object> data) {
    this.data = data;
    return this;
  }

  public SourceValidateResponse addData(Object dataItem) {
    if (this.data == null) {
      this.data = new ArrayList<>();
    }
    this.data.add(dataItem);
    return this;
  }

  /**
   * depending on the source type, the validation returns sampling data of your source (JSON, CSV,
   * BigQuery).
   */
  @javax.annotation.Nullable
  public List<Object> getData() {
    return data;
  }

  public SourceValidateResponse setEvents(List<Event> events) {
    this.events = events;
    return this;
  }

  public SourceValidateResponse addEvents(Event eventsItem) {
    if (this.events == null) {
      this.events = new ArrayList<>();
    }
    this.events.add(eventsItem);
    return this;
  }

  /** in case of error, observability events will be added to the response, if any. */
  @javax.annotation.Nullable
  public List<Event> getEvents() {
    return events;
  }

  public SourceValidateResponse setMessage(String message) {
    this.message = message;
    return this;
  }

  /** a message describing the outcome of a validate run. */
  @javax.annotation.Nonnull
  public String getMessage() {
    return message;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SourceValidateResponse sourceValidateResponse = (SourceValidateResponse) o;
    return (
      Objects.equals(this.runID, sourceValidateResponse.runID) &&
      Objects.equals(this.data, sourceValidateResponse.data) &&
      Objects.equals(this.events, sourceValidateResponse.events) &&
      Objects.equals(this.message, sourceValidateResponse.message)
    );
  }

  @Override
  public int hashCode() {
    return Objects.hash(runID, data, events, message);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SourceValidateResponse {\n");
    sb.append("    runID: ").append(toIndentedString(runID)).append("\n");
    sb.append("    data: ").append(toIndentedString(data)).append("\n");
    sb.append("    events: ").append(toIndentedString(events)).append("\n");
    sb.append("    message: ").append(toIndentedString(message)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}
