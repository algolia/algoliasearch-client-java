// Code generated by OpenAPI Generator (https://openapi-generator.tech), manual changes will be lost
// - read more on https://github.com/algolia/api-clients-automation. DO NOT EDIT.

package com.algolia.model.ingestion;

import com.fasterxml.jackson.annotation.*;
import com.fasterxml.jackson.databind.annotation.*;
import java.util.ArrayList;
import java.util.List;
import java.util.Objects;

/** RunSourcePayload */
public class RunSourcePayload {

  @JsonProperty("indexToInclude")
  private List<String> indexToInclude;

  @JsonProperty("indexToExclude")
  private List<String> indexToExclude;

  @JsonProperty("entityIDs")
  private List<String> entityIDs;

  @JsonProperty("entityType")
  private EntityType entityType;

  public RunSourcePayload setIndexToInclude(List<String> indexToInclude) {
    this.indexToInclude = indexToInclude;
    return this;
  }

  public RunSourcePayload addIndexToInclude(String indexToIncludeItem) {
    if (this.indexToInclude == null) {
      this.indexToInclude = new ArrayList<>();
    }
    this.indexToInclude.add(indexToIncludeItem);
    return this;
  }

  /** List of index names to include in reidexing/update. */
  @javax.annotation.Nullable
  public List<String> getIndexToInclude() {
    return indexToInclude;
  }

  public RunSourcePayload setIndexToExclude(List<String> indexToExclude) {
    this.indexToExclude = indexToExclude;
    return this;
  }

  public RunSourcePayload addIndexToExclude(String indexToExcludeItem) {
    if (this.indexToExclude == null) {
      this.indexToExclude = new ArrayList<>();
    }
    this.indexToExclude.add(indexToExcludeItem);
    return this;
  }

  /** List of index names to exclude in reidexing/update. */
  @javax.annotation.Nullable
  public List<String> getIndexToExclude() {
    return indexToExclude;
  }

  public RunSourcePayload setEntityIDs(List<String> entityIDs) {
    this.entityIDs = entityIDs;
    return this;
  }

  public RunSourcePayload addEntityIDs(String entityIDsItem) {
    if (this.entityIDs == null) {
      this.entityIDs = new ArrayList<>();
    }
    this.entityIDs.add(entityIDsItem);
    return this;
  }

  /** List of entityID to update. */
  @javax.annotation.Nullable
  public List<String> getEntityIDs() {
    return entityIDs;
  }

  public RunSourcePayload setEntityType(EntityType entityType) {
    this.entityType = entityType;
    return this;
  }

  /** Get entityType */
  @javax.annotation.Nullable
  public EntityType getEntityType() {
    return entityType;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    RunSourcePayload runSourcePayload = (RunSourcePayload) o;
    return (
      Objects.equals(this.indexToInclude, runSourcePayload.indexToInclude) &&
      Objects.equals(this.indexToExclude, runSourcePayload.indexToExclude) &&
      Objects.equals(this.entityIDs, runSourcePayload.entityIDs) &&
      Objects.equals(this.entityType, runSourcePayload.entityType)
    );
  }

  @Override
  public int hashCode() {
    return Objects.hash(indexToInclude, indexToExclude, entityIDs, entityType);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class RunSourcePayload {\n");
    sb.append("    indexToInclude: ").append(toIndentedString(indexToInclude)).append("\n");
    sb.append("    indexToExclude: ").append(toIndentedString(indexToExclude)).append("\n");
    sb.append("    entityIDs: ").append(toIndentedString(entityIDs)).append("\n");
    sb.append("    entityType: ").append(toIndentedString(entityType)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}
