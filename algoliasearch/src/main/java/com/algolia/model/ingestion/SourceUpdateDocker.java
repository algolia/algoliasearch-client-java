// Code generated by OpenAPI Generator (https://openapi-generator.tech), manual changes will be lost
// - read more on https://github.com/algolia/api-clients-automation. DO NOT EDIT.

package com.algolia.model.ingestion;

import com.fasterxml.jackson.annotation.*;
import com.fasterxml.jackson.databind.annotation.*;
import java.util.Objects;

/** SourceUpdateDocker */
@JsonDeserialize(as = SourceUpdateDocker.class)
public class SourceUpdateDocker implements SourceUpdateInput {

  @JsonProperty("registry")
  private DockerRegistry registry;

  @JsonProperty("image")
  private String image;

  @JsonProperty("version")
  private String version;

  @JsonProperty("configuration")
  private Object _configuration;

  public SourceUpdateDocker setRegistry(DockerRegistry registry) {
    this.registry = registry;
    return this;
  }

  /** Get registry */
  @javax.annotation.Nullable
  public DockerRegistry getRegistry() {
    return registry;
  }

  public SourceUpdateDocker setImage(String image) {
    this.image = image;
    return this;
  }

  /** Docker image name. */
  @javax.annotation.Nullable
  public String getImage() {
    return image;
  }

  public SourceUpdateDocker setVersion(String version) {
    this.version = version;
    return this;
  }

  /** Docker image version. */
  @javax.annotation.Nullable
  public String getVersion() {
    return version;
  }

  public SourceUpdateDocker setConfiguration(Object _configuration) {
    this._configuration = _configuration;
    return this;
  }

  /** Configuration of the spec. */
  @javax.annotation.Nonnull
  public Object getConfiguration() {
    return _configuration;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SourceUpdateDocker sourceUpdateDocker = (SourceUpdateDocker) o;
    return (
      Objects.equals(this.registry, sourceUpdateDocker.registry) &&
      Objects.equals(this.image, sourceUpdateDocker.image) &&
      Objects.equals(this.version, sourceUpdateDocker.version) &&
      Objects.equals(this._configuration, sourceUpdateDocker._configuration)
    );
  }

  @Override
  public int hashCode() {
    return Objects.hash(registry, image, version, _configuration);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SourceUpdateDocker {\n");
    sb.append("    registry: ").append(toIndentedString(registry)).append("\n");
    sb.append("    image: ").append(toIndentedString(image)).append("\n");
    sb.append("    version: ").append(toIndentedString(version)).append("\n");
    sb.append("    _configuration: ").append(toIndentedString(_configuration)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}
