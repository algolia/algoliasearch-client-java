// Code generated by OpenAPI Generator (https://openapi-generator.tech), manual changes will be lost
// - read more on https://github.com/algolia/api-clients-automation. DO NOT EDIT.

package com.algolia.model.ingestion;

import com.fasterxml.jackson.annotation.*;
import com.fasterxml.jackson.databind.annotation.*;
import java.util.ArrayList;
import java.util.List;
import java.util.Objects;

/** DockerStreams */
public class DockerStreams {

  @JsonProperty("name")
  private String name;

  @JsonProperty("properties")
  private List<String> properties;

  @JsonProperty("syncMode")
  private DockerStreamsSyncMode syncMode;

  public DockerStreams setName(String name) {
    this.name = name;
    return this;
  }

  /** The name of the stream to fetch the data from (e.g. table name). */
  @javax.annotation.Nonnull
  public String getName() {
    return name;
  }

  public DockerStreams setProperties(List<String> properties) {
    this.properties = properties;
    return this;
  }

  public DockerStreams addProperties(String propertiesItem) {
    if (this.properties == null) {
      this.properties = new ArrayList<>();
    }
    this.properties.add(propertiesItem);
    return this;
  }

  /** The properties of the stream to select (e.g. column). */
  @javax.annotation.Nullable
  public List<String> getProperties() {
    return properties;
  }

  public DockerStreams setSyncMode(DockerStreamsSyncMode syncMode) {
    this.syncMode = syncMode;
    return this;
  }

  /** Get syncMode */
  @javax.annotation.Nonnull
  public DockerStreamsSyncMode getSyncMode() {
    return syncMode;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DockerStreams dockerStreams = (DockerStreams) o;
    return (
      Objects.equals(this.name, dockerStreams.name) &&
      Objects.equals(this.properties, dockerStreams.properties) &&
      Objects.equals(this.syncMode, dockerStreams.syncMode)
    );
  }

  @Override
  public int hashCode() {
    return Objects.hash(name, properties, syncMode);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DockerStreams {\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    properties: ").append(toIndentedString(properties)).append("\n");
    sb.append("    syncMode: ").append(toIndentedString(syncMode)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}
