// Code generated by OpenAPI Generator (https://openapi-generator.tech), manual changes will be lost
// - read more on https://github.com/algolia/api-clients-automation. DO NOT EDIT.

package com.algolia.model.ingestion;

import com.fasterxml.jackson.annotation.*;
import com.fasterxml.jackson.databind.annotation.*;
import java.util.Objects;

/** Credentials for authenticating with OAuth 2.0. */
@JsonDeserialize(as = AuthOAuthPartial.class)
public class AuthOAuthPartial implements AuthInputPartial {

  @JsonProperty("url")
  private String url;

  @JsonProperty("client_id")
  private String clientId;

  @JsonProperty("client_secret")
  private String clientSecret;

  @JsonProperty("scope")
  private String scope;

  public AuthOAuthPartial setUrl(String url) {
    this.url = url;
    return this;
  }

  /** URL for the OAuth endpoint. */
  @javax.annotation.Nullable
  public String getUrl() {
    return url;
  }

  public AuthOAuthPartial setClientId(String clientId) {
    this.clientId = clientId;
    return this;
  }

  /** Client ID. */
  @javax.annotation.Nullable
  public String getClientId() {
    return clientId;
  }

  public AuthOAuthPartial setClientSecret(String clientSecret) {
    this.clientSecret = clientSecret;
    return this;
  }

  /** Client secret. This field is `null` in the API response. */
  @javax.annotation.Nullable
  public String getClientSecret() {
    return clientSecret;
  }

  public AuthOAuthPartial setScope(String scope) {
    this.scope = scope;
    return this;
  }

  /** OAuth scope. */
  @javax.annotation.Nullable
  public String getScope() {
    return scope;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AuthOAuthPartial authOAuthPartial = (AuthOAuthPartial) o;
    return (
      Objects.equals(this.url, authOAuthPartial.url) &&
      Objects.equals(this.clientId, authOAuthPartial.clientId) &&
      Objects.equals(this.clientSecret, authOAuthPartial.clientSecret) &&
      Objects.equals(this.scope, authOAuthPartial.scope)
    );
  }

  @Override
  public int hashCode() {
    return Objects.hash(url, clientId, clientSecret, scope);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AuthOAuthPartial {\n");
    sb.append("    url: ").append(toIndentedString(url)).append("\n");
    sb.append("    clientId: ").append(toIndentedString(clientId)).append("\n");
    sb.append("    clientSecret: ").append(toIndentedString(clientSecret)).append("\n");
    sb.append("    scope: ").append(toIndentedString(scope)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}
