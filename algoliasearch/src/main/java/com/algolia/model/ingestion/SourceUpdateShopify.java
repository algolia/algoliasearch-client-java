// Code generated by OpenAPI Generator (https://openapi-generator.tech), manual changes will be lost
// - read more on https://github.com/algolia/api-clients-automation. DO NOT EDIT.

package com.algolia.model.ingestion;

import com.fasterxml.jackson.annotation.*;
import com.fasterxml.jackson.databind.annotation.*;
import java.util.HashMap;
import java.util.Map;
import java.util.Objects;

/** SourceUpdateShopify */
@JsonDeserialize(as = SourceUpdateShopify.class)
public class SourceUpdateShopify implements SourceUpdateInput {

  @JsonProperty("featureFlags")
  private Map<String, Object> featureFlags;

  public SourceUpdateShopify setFeatureFlags(Map<String, Object> featureFlags) {
    this.featureFlags = featureFlags;
    return this;
  }

  public SourceUpdateShopify putFeatureFlags(String key, Object featureFlagsItem) {
    if (this.featureFlags == null) {
      this.featureFlags = new HashMap<>();
    }
    this.featureFlags.put(key, featureFlagsItem);
    return this;
  }

  /** Feature flags for the Shopify source. */
  @javax.annotation.Nullable
  public Map<String, Object> getFeatureFlags() {
    return featureFlags;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SourceUpdateShopify sourceUpdateShopify = (SourceUpdateShopify) o;
    return Objects.equals(this.featureFlags, sourceUpdateShopify.featureFlags);
  }

  @Override
  public int hashCode() {
    return Objects.hash(featureFlags);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SourceUpdateShopify {\n");
    sb.append("    featureFlags: ").append(toIndentedString(featureFlags)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}
