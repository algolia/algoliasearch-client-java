// Code generated by OpenAPI Generator (https://openapi-generator.tech), manual changes will be lost
// - read more on https://github.com/algolia/api-clients-automation. DO NOT EDIT.

package com.algolia.model.ingestion;

import com.fasterxml.jackson.annotation.*;
import com.fasterxml.jackson.databind.annotation.*;
import java.util.ArrayList;
import java.util.List;
import java.util.Objects;

/** BigCommerceChannel */
public class BigCommerceChannel {

  @JsonProperty("id")
  private Integer id;

  @JsonProperty("currencies")
  private List<String> currencies;

  public BigCommerceChannel setId(Integer id) {
    this.id = id;
    return this;
  }

  /** ID of the BigCommerce channel. */
  @javax.annotation.Nonnull
  public Integer getId() {
    return id;
  }

  public BigCommerceChannel setCurrencies(List<String> currencies) {
    this.currencies = currencies;
    return this;
  }

  public BigCommerceChannel addCurrencies(String currenciesItem) {
    if (this.currencies == null) {
      this.currencies = new ArrayList<>();
    }
    this.currencies.add(currenciesItem);
    return this;
  }

  /** Currencies for the given channel. */
  @javax.annotation.Nullable
  public List<String> getCurrencies() {
    return currencies;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    BigCommerceChannel bigCommerceChannel = (BigCommerceChannel) o;
    return Objects.equals(this.id, bigCommerceChannel.id) && Objects.equals(this.currencies, bigCommerceChannel.currencies);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, currencies);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class BigCommerceChannel {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    currencies: ").append(toIndentedString(currencies)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}
