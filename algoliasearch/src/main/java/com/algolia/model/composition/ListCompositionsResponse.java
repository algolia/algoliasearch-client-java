// Code generated by OpenAPI Generator (https://openapi-generator.tech), manual changes will be lost
// - read more on https://github.com/algolia/api-clients-automation. DO NOT EDIT.

package com.algolia.model.composition;

import com.fasterxml.jackson.annotation.*;
import com.fasterxml.jackson.databind.annotation.*;
import java.util.ArrayList;
import java.util.List;
import java.util.Objects;

/** ListCompositionsResponse */
public class ListCompositionsResponse {

  @JsonProperty("items")
  private List<Composition> items = new ArrayList<>();

  @JsonProperty("nbPages")
  private Integer nbPages;

  @JsonProperty("page")
  private Integer page;

  @JsonProperty("hitsPerPage")
  private Integer hitsPerPage;

  @JsonProperty("nbHits")
  private Integer nbHits;

  public ListCompositionsResponse setItems(List<Composition> items) {
    this.items = items;
    return this;
  }

  public ListCompositionsResponse addItems(Composition itemsItem) {
    this.items.add(itemsItem);
    return this;
  }

  /** All compositions in your Algolia application. */
  @javax.annotation.Nonnull
  public List<Composition> getItems() {
    return items;
  }

  public ListCompositionsResponse setNbPages(Integer nbPages) {
    this.nbPages = nbPages;
    return this;
  }

  /** Number of pages. */
  @javax.annotation.Nonnull
  public Integer getNbPages() {
    return nbPages;
  }

  public ListCompositionsResponse setPage(Integer page) {
    this.page = page;
    return this;
  }

  /** Current page. */
  @javax.annotation.Nonnull
  public Integer getPage() {
    return page;
  }

  public ListCompositionsResponse setHitsPerPage(Integer hitsPerPage) {
    this.hitsPerPage = hitsPerPage;
    return this;
  }

  /** Number of items per page. */
  @javax.annotation.Nonnull
  public Integer getHitsPerPage() {
    return hitsPerPage;
  }

  public ListCompositionsResponse setNbHits(Integer nbHits) {
    this.nbHits = nbHits;
    return this;
  }

  /** Number of items. */
  @javax.annotation.Nonnull
  public Integer getNbHits() {
    return nbHits;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ListCompositionsResponse listCompositionsResponse = (ListCompositionsResponse) o;
    return (
      Objects.equals(this.items, listCompositionsResponse.items) &&
      Objects.equals(this.nbPages, listCompositionsResponse.nbPages) &&
      Objects.equals(this.page, listCompositionsResponse.page) &&
      Objects.equals(this.hitsPerPage, listCompositionsResponse.hitsPerPage) &&
      Objects.equals(this.nbHits, listCompositionsResponse.nbHits)
    );
  }

  @Override
  public int hashCode() {
    return Objects.hash(items, nbPages, page, hitsPerPage, nbHits);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ListCompositionsResponse {\n");
    sb.append("    items: ").append(toIndentedString(items)).append("\n");
    sb.append("    nbPages: ").append(toIndentedString(nbPages)).append("\n");
    sb.append("    page: ").append(toIndentedString(page)).append("\n");
    sb.append("    hitsPerPage: ").append(toIndentedString(hitsPerPage)).append("\n");
    sb.append("    nbHits: ").append(toIndentedString(nbHits)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}
