// Code generated by OpenAPI Generator (https://openapi-generator.tech), manual changes will be lost
// - read more on https://github.com/algolia/api-clients-automation. DO NOT EDIT.

package com.algolia.model.composition;

import com.fasterxml.jackson.annotation.*;
import com.fasterxml.jackson.databind.annotation.*;
import java.util.Objects;

/** Injected items will originate from a search request performed on the specified index. */
@JsonDeserialize(as = SearchSource.class)
public class SearchSource implements InjectedItemSource {

  @JsonProperty("search")
  private Search search;

  public SearchSource setSearch(Search search) {
    this.search = search;
    return this;
  }

  /** Get search */
  @javax.annotation.Nonnull
  public Search getSearch() {
    return search;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SearchSource searchSource = (SearchSource) o;
    return Objects.equals(this.search, searchSource.search);
  }

  @Override
  public int hashCode() {
    return Objects.hash(search);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SearchSource {\n");
    sb.append("    search: ").append(toIndentedString(search)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}
