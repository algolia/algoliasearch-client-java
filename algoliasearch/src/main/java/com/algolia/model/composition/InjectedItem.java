// Code generated by OpenAPI Generator (https://openapi-generator.tech), manual changes will be lost
// - read more on https://github.com/algolia/api-clients-automation. DO NOT EDIT.

package com.algolia.model.composition;

import com.fasterxml.jackson.annotation.*;
import com.fasterxml.jackson.databind.annotation.*;
import java.util.Objects;

/** InjectedItem */
public class InjectedItem {

  @JsonProperty("key")
  private String key;

  @JsonProperty("source")
  private InjectedItemSource source;

  @JsonProperty("position")
  private Integer position;

  @JsonProperty("length")
  private Integer length;

  @JsonProperty("metadata")
  private InjectedItemMetadata metadata;

  public InjectedItem setKey(String key) {
    this.key = key;
    return this;
  }

  /** injected Item unique identifier. */
  @javax.annotation.Nonnull
  public String getKey() {
    return key;
  }

  public InjectedItem setSource(InjectedItemSource source) {
    this.source = source;
    return this;
  }

  /** Get source */
  @javax.annotation.Nonnull
  public InjectedItemSource getSource() {
    return source;
  }

  public InjectedItem setPosition(Integer position) {
    this.position = position;
    return this;
  }

  /** Get position minimum: 0 maximum: 19 */
  @javax.annotation.Nonnull
  public Integer getPosition() {
    return position;
  }

  public InjectedItem setLength(Integer length) {
    this.length = length;
    return this;
  }

  /** Get length minimum: 0 maximum: 20 */
  @javax.annotation.Nonnull
  public Integer getLength() {
    return length;
  }

  public InjectedItem setMetadata(InjectedItemMetadata metadata) {
    this.metadata = metadata;
    return this;
  }

  /** Get metadata */
  @javax.annotation.Nullable
  public InjectedItemMetadata getMetadata() {
    return metadata;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    InjectedItem injectedItem = (InjectedItem) o;
    return (
      Objects.equals(this.key, injectedItem.key) &&
      Objects.equals(this.source, injectedItem.source) &&
      Objects.equals(this.position, injectedItem.position) &&
      Objects.equals(this.length, injectedItem.length) &&
      Objects.equals(this.metadata, injectedItem.metadata)
    );
  }

  @Override
  public int hashCode() {
    return Objects.hash(key, source, position, length, metadata);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class InjectedItem {\n");
    sb.append("    key: ").append(toIndentedString(key)).append("\n");
    sb.append("    source: ").append(toIndentedString(source)).append("\n");
    sb.append("    position: ").append(toIndentedString(position)).append("\n");
    sb.append("    length: ").append(toIndentedString(length)).append("\n");
    sb.append("    metadata: ").append(toIndentedString(metadata)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}
