// Code generated by OpenAPI Generator (https://openapi-generator.tech), manual changes will be lost
// - read more on https://github.com/algolia/api-clients-automation. DO NOT EDIT.

package com.algolia.model.composition;

import com.fasterxml.jackson.annotation.*;
import com.fasterxml.jackson.databind.annotation.*;
import java.util.Objects;

/** SearchForFacetValuesParams */
public class SearchForFacetValuesParams {

  @JsonProperty("query")
  private String query;

  @JsonProperty("maxFacetHits")
  private Integer maxFacetHits;

  @JsonProperty("searchQuery")
  private Params searchQuery;

  public SearchForFacetValuesParams setQuery(String query) {
    this.query = query;
    return this;
  }

  /** Search query. */
  @javax.annotation.Nullable
  public String getQuery() {
    return query;
  }

  public SearchForFacetValuesParams setMaxFacetHits(Integer maxFacetHits) {
    this.maxFacetHits = maxFacetHits;
    return this;
  }

  /**
   * Maximum number of facet values to return when [searching for facet
   * values](https://www.algolia.com/doc/guides/managing-results/refine-results/faceting/#search-for-facet-values).
   * maximum: 100
   */
  @javax.annotation.Nullable
  public Integer getMaxFacetHits() {
    return maxFacetHits;
  }

  public SearchForFacetValuesParams setSearchQuery(Params searchQuery) {
    this.searchQuery = searchQuery;
    return this;
  }

  /** Get searchQuery */
  @javax.annotation.Nullable
  public Params getSearchQuery() {
    return searchQuery;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SearchForFacetValuesParams searchForFacetValuesParams = (SearchForFacetValuesParams) o;
    return (
      Objects.equals(this.query, searchForFacetValuesParams.query) &&
      Objects.equals(this.maxFacetHits, searchForFacetValuesParams.maxFacetHits) &&
      Objects.equals(this.searchQuery, searchForFacetValuesParams.searchQuery)
    );
  }

  @Override
  public int hashCode() {
    return Objects.hash(query, maxFacetHits, searchQuery);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SearchForFacetValuesParams {\n");
    sb.append("    query: ").append(toIndentedString(query)).append("\n");
    sb.append("    maxFacetHits: ").append(toIndentedString(maxFacetHits)).append("\n");
    sb.append("    searchQuery: ").append(toIndentedString(searchQuery)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}
