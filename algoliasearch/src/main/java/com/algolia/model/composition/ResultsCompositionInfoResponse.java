// Code generated by OpenAPI Generator (https://openapi-generator.tech), manual changes will be lost
// - read more on https://github.com/algolia/api-clients-automation. DO NOT EDIT.

package com.algolia.model.composition;

import com.fasterxml.jackson.annotation.*;
import com.fasterxml.jackson.databind.annotation.*;
import java.util.ArrayList;
import java.util.List;
import java.util.Objects;

/** ResultsCompositionInfoResponse */
public class ResultsCompositionInfoResponse {

  @JsonProperty("injectedItems")
  private List<ResultsInjectedItemInfoResponse> injectedItems = new ArrayList<>();

  public ResultsCompositionInfoResponse setInjectedItems(List<ResultsInjectedItemInfoResponse> injectedItems) {
    this.injectedItems = injectedItems;
    return this;
  }

  public ResultsCompositionInfoResponse addInjectedItems(ResultsInjectedItemInfoResponse injectedItemsItem) {
    this.injectedItems.add(injectedItemsItem);
    return this;
  }

  /** Get injectedItems */
  @javax.annotation.Nonnull
  public List<ResultsInjectedItemInfoResponse> getInjectedItems() {
    return injectedItems;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ResultsCompositionInfoResponse resultsCompositionInfoResponse = (ResultsCompositionInfoResponse) o;
    return Objects.equals(this.injectedItems, resultsCompositionInfoResponse.injectedItems);
  }

  @Override
  public int hashCode() {
    return Objects.hash(injectedItems);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ResultsCompositionInfoResponse {\n");
    sb.append("    injectedItems: ").append(toIndentedString(injectedItems)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}
