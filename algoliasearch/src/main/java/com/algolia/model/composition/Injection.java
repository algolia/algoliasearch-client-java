// Code generated by OpenAPI Generator (https://openapi-generator.tech), manual changes will be lost
// - read more on https://github.com/algolia/api-clients-automation. DO NOT EDIT.

package com.algolia.model.composition;

import com.fasterxml.jackson.annotation.*;
import com.fasterxml.jackson.databind.annotation.*;
import java.util.ArrayList;
import java.util.List;
import java.util.Objects;

/** Injection */
public class Injection {

  @JsonProperty("main")
  private Main main;

  @JsonProperty("injectedItems")
  private List<InjectedItem> injectedItems;

  @JsonProperty("deduplication")
  private Deduplication deduplication;

  public Injection setMain(Main main) {
    this.main = main;
    return this;
  }

  /** Get main */
  @javax.annotation.Nonnull
  public Main getMain() {
    return main;
  }

  public Injection setInjectedItems(List<InjectedItem> injectedItems) {
    this.injectedItems = injectedItems;
    return this;
  }

  public Injection addInjectedItems(InjectedItem injectedItemsItem) {
    if (this.injectedItems == null) {
      this.injectedItems = new ArrayList<>();
    }
    this.injectedItems.add(injectedItemsItem);
    return this;
  }

  /** list of injected items of the current Composition. */
  @javax.annotation.Nullable
  public List<InjectedItem> getInjectedItems() {
    return injectedItems;
  }

  public Injection setDeduplication(Deduplication deduplication) {
    this.deduplication = deduplication;
    return this;
  }

  /** Get deduplication */
  @javax.annotation.Nullable
  public Deduplication getDeduplication() {
    return deduplication;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Injection injection = (Injection) o;
    return (
      Objects.equals(this.main, injection.main) &&
      Objects.equals(this.injectedItems, injection.injectedItems) &&
      Objects.equals(this.deduplication, injection.deduplication)
    );
  }

  @Override
  public int hashCode() {
    return Objects.hash(main, injectedItems, deduplication);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Injection {\n");
    sb.append("    main: ").append(toIndentedString(main)).append("\n");
    sb.append("    injectedItems: ").append(toIndentedString(injectedItems)).append("\n");
    sb.append("    deduplication: ").append(toIndentedString(deduplication)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}
