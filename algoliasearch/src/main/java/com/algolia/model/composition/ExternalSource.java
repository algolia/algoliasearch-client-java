// Code generated by OpenAPI Generator (https://openapi-generator.tech), manual changes will be lost
// - read more on https://github.com/algolia/api-clients-automation. DO NOT EDIT.

package com.algolia.model.composition;

import com.fasterxml.jackson.annotation.*;
import com.fasterxml.jackson.databind.annotation.*;
import java.util.Objects;

/**
 * Injected items will originate from externally provided objectIDs (that must exist in the index)
 * given at runtime in the run request payload.
 */
@JsonDeserialize(as = ExternalSource.class)
public class ExternalSource implements InjectedItemSource {

  @JsonProperty("external")
  private External external;

  public ExternalSource setExternal(External external) {
    this.external = external;
    return this;
  }

  /** Get external */
  @javax.annotation.Nonnull
  public External getExternal() {
    return external;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ExternalSource externalSource = (ExternalSource) o;
    return Objects.equals(this.external, externalSource.external);
  }

  @Override
  public int hashCode() {
    return Objects.hash(external);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ExternalSource {\n");
    sb.append("    external: ").append(toIndentedString(external)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}
