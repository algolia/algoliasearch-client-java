// Code generated by OpenAPI Generator (https://openapi-generator.tech), manual changes will be lost
// - read more on https://github.com/algolia/api-clients-automation. DO NOT EDIT.

package com.algolia.model.composition;

import com.fasterxml.jackson.annotation.*;
import com.fasterxml.jackson.databind.annotation.*;
import java.util.Objects;

/** Composition */
@JsonDeserialize(as = Composition.class)
public class Composition implements BatchCompositionAction {

  @JsonProperty("objectID")
  private String objectID;

  @JsonProperty("name")
  private String name;

  @JsonProperty("description")
  private String description;

  @JsonProperty("behavior")
  private CompositionBehavior behavior;

  public Composition setObjectID(String objectID) {
    this.objectID = objectID;
    return this;
  }

  /** Composition unique identifier. */
  @javax.annotation.Nonnull
  public String getObjectID() {
    return objectID;
  }

  public Composition setName(String name) {
    this.name = name;
    return this;
  }

  /** Composition name. */
  @javax.annotation.Nonnull
  public String getName() {
    return name;
  }

  public Composition setDescription(String description) {
    this.description = description;
    return this;
  }

  /** Composition description. */
  @javax.annotation.Nullable
  public String getDescription() {
    return description;
  }

  public Composition setBehavior(CompositionBehavior behavior) {
    this.behavior = behavior;
    return this;
  }

  /** Get behavior */
  @javax.annotation.Nonnull
  public CompositionBehavior getBehavior() {
    return behavior;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Composition composition = (Composition) o;
    return (
      Objects.equals(this.objectID, composition.objectID) &&
      Objects.equals(this.name, composition.name) &&
      Objects.equals(this.description, composition.description) &&
      Objects.equals(this.behavior, composition.behavior)
    );
  }

  @Override
  public int hashCode() {
    return Objects.hash(objectID, name, description, behavior);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Composition {\n");
    sb.append("    objectID: ").append(toIndentedString(objectID)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    behavior: ").append(toIndentedString(behavior)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}
