name: Checks

on:
  pull_request:
    types: [opened, synchronize]
  push:
    branches:
      - main

concurrency:
  group: ${{ github.ref }}
  cancel-in-progress: true

jobs:
  setup:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Setup
        id: setup
        uses: ./.github/actions/setup

      - name: Lint GitHub actions
        run: yarn eslint --ext=yml .github/actions .github/workflows
    outputs:
      RUN_SPECS_SEARCH: ${{ steps.setup.outputs.RUN_SPECS_SEARCH }}
      RUN_SPECS_RECOMMEND: ${{ steps.setup.outputs.RUN_SPECS_RECOMMEND }}
      RUN_SPECS_QS: ${{ steps.setup.outputs.RUN_SPECS_QS }}
      RUN_SPECS_PERSO: ${{ steps.setup.outputs.RUN_SPECS_PERSO }}
      RUN_SPECS_INSIGHTS: ${{ steps.setup.outputs.RUN_SPECS_INSIGHTS }}
      RUN_SPECS_ANALYTICS: ${{ steps.setup.outputs.RUN_SPECS_ANALYTICS }}
      RUN_SPECS_AB: ${{ steps.setup.outputs.RUN_SPECS_AB }}

      RUN_JS_CLIENT_SEARCH: ${{ steps.setup.outputs.RUN_JS_CLIENT_SEARCH }}
      RUN_JS_CLIENT_RECOMMEND: ${{ steps.setup.outputs.RUN_JS_CLIENT_RECOMMEND }}
      RUN_JS_CLIENT_PERSO: ${{ steps.setup.outputs.RUN_JS_CLIENT_PERSO }}
      RUN_JS_CLIENT_ANALYTICS: ${{ steps.setup.outputs.RUN_JS_CLIENT_ANALYTICS }}

      RUN_JAVA_CLIENT: ${{ steps.setup.outputs.RUN_JAVA_CLIENT }}

      RUN_CTS: ${{ steps.setup.outputs.RUN_CTS }}

  specs_search:
    runs-on: ubuntu-20.04
    needs: setup
    if: ${{ always() && needs.setup.outputs.RUN_SPECS_SEARCH == 'true' }}
    steps:
      - uses: actions/checkout@v2

      - name: Restore cache
        uses: ./.github/actions/cache

      - name: Checking search specs
        run: yarn build:specs search

      - name: Lint search specs
        run: yarn eslint --ext=yml specs/search

  specs_recommend:
    runs-on: ubuntu-20.04
    needs: setup
    if: ${{ always() && needs.setup.outputs.RUN_SPECS_RECOMMEND == 'true' }}
    steps:
      - uses: actions/checkout@v2

      - name: Restore cache
        uses: ./.github/actions/cache

      - name: Checking recommend specs
        run: yarn build:specs recommend

      - name: Lint recommend specs
        run: yarn eslint --ext=yml specs/recommend

  specs_perso:
    runs-on: ubuntu-20.04
    needs: setup
    if: ${{ always() && needs.setup.outputs.RUN_SPECS_PERSO == 'true' }}
    steps:
      - uses: actions/checkout@v2

      - name: Restore cache
        uses: ./.github/actions/cache

      - name: Checking personalization specs
        run: yarn build:specs personalization

      - name: Lint personalization specs
        run: yarn eslint --ext=yml specs/personalization

  specs_analytics:
    runs-on: ubuntu-20.04
    needs: setup
    if: ${{ always() && needs.setup.outputs.RUN_SPECS_ANALYTICS == 'true' }}
    steps:
      - uses: actions/checkout@v2

      - name: Restore cache
        uses: ./.github/actions/cache

      - name: Checking analytics specs
        run: yarn build:specs analytics

      - name: Lint analytics specs
        run: yarn eslint --ext=yml specs/analytics

  client_javascript_search:
    runs-on: ubuntu-20.04
    needs: [specs_search]
    if: ${{ always() && needs.setup.outputs.RUN_JS_CLIENT_SEARCH == 'true' }}
    steps:
      - uses: actions/checkout@v2

      - name: Restore cache
        uses: ./.github/actions/cache

      - name: Cache search client
        id: cache
        uses: actions/cache@v2
        with:
          path: /home/runner/work/api-clients-automation/api-clients-automation/clients/algoliasearch-client-javascript/client-search/dist
          key: ${{ runner.os }}-js-client-search-${{ hashFiles('clients/algoliasearch-client-javascript/client-search/**') }}

      - name: Generate search client
        if: steps.cache.outputs.cache-hit != 'true'
        run: yarn generate javascript search

      - name: Build search client
        if: steps.cache.outputs.cache-hit != 'true'
        run: yarn build:clients javascript search

  client_javascript_recommend:
    runs-on: ubuntu-20.04
    needs: [specs_recommend]
    if: ${{ always() && needs.setup.outputs.RUN_JS_CLIENT_RECOMMEND == 'true' }}
    steps:
      - uses: actions/checkout@v2

      - name: Restore cache
        uses: ./.github/actions/cache

      - name: Cache recommend client
        id: cache
        uses: actions/cache@v2
        with:
          path: /home/runner/work/api-clients-automation/api-clients-automation/clients/algoliasearch-client-javascript/recommend/dist
          key: ${{ runner.os }}-js-client-recommend-${{ hashFiles('clients/algoliasearch-client-javascript/recommend/**') }}

      - name: Generate recommend client
        if: steps.cache.outputs.cache-hit != 'true'
        run: yarn generate javascript recommend

      - name: Build recommend client
        if: steps.cache.outputs.cache-hit != 'true'
        run: yarn build:clients javascript recommend

  client_javascript_perso:
    runs-on: ubuntu-20.04
    needs: [specs_perso]
    if: ${{ always() && needs.setup.outputs.RUN_JS_CLIENT_PERSO == 'true' }}
    steps:
      - uses: actions/checkout@v2

      - name: Restore cache
        uses: ./.github/actions/cache

      - name: Cache personalization client
        id: cache
        uses: actions/cache@v2
        with:
          path: /home/runner/work/api-clients-automation/api-clients-automation/clients/algoliasearch-client-javascript/client-personalization/dist
          key: ${{ runner.os }}-js-client-personalization-${{ hashFiles('clients/algoliasearch-client-javascript/client-personalization/**') }}

      - name: Generate personalization client
        if: steps.cache.outputs.cache-hit != 'true'
        run: yarn generate javascript personalization

      - name: Build personalization client
        if: steps.cache.outputs.cache-hit != 'true'
        run: yarn build:clients javascript personalization

  client_javascript_analytics:
    runs-on: ubuntu-20.04
    needs: [specs_analytics]
    if: ${{ always() && needs.setup.outputs.RUN_JS_CLIENT_ANALYTICS == 'true' }}
    steps:
      - uses: actions/checkout@v2

      - name: Restore cache
        uses: ./.github/actions/cache

      - name: Cache analytics client
        id: cache
        uses: actions/cache@v2
        with:
          path: /home/runner/work/api-clients-automation/api-clients-automation/clients/algoliasearch-client-javascript/client-analytics/dist
          key: ${{ runner.os }}-js-client-analytics-${{ hashFiles('clients/algoliasearch-client-javascript/client-analytics/**') }}

      - name: Generate analytics client
        if: steps.cache.outputs.cache-hit != 'true'
        run: yarn generate javascript analytics

      - name: Build analytics client
        if: steps.cache.outputs.cache-hit != 'true'
        run: yarn build:clients javascript analytics

  client_java_search:
    runs-on: ubuntu-20.04
    needs: [specs_search]
    if: ${{ always() && needs.setup.outputs.RUN_JAVA_CLIENT == 'true' }}
    steps:
      - uses: actions/checkout@v2

      - name: Restore cache
        uses: ./.github/actions/cache
        with:
          job: java

      - name: Cache built clients
        id: cache
        uses: actions/cache@v2
        with:
          path: /home/runner/work/api-clients-automation/api-clients-automation/clients/algoliasearch-client-java-2/target
          key: ${{ runner.os }}-java-client-${{ hashFiles('clients/algoliasearch-client-java-2/**') }}

      - name: Generate search client
        if: steps.cache.outputs.cache-hit != 'true'
        run: yarn generate java search

      - name: Build search client
        if: steps.cache.outputs.cache-hit != 'true'
        run: yarn build:clients java search

  cts:
    runs-on: ubuntu-20.04
    needs:
      - client_javascript_search
      - client_javascript_recommend
      - client_javascript_perso
      - client_javascript_analytics
      - client_java_search

    if: ${{ always() && needs.setup.outputs.RUN_CTS == 'true' }}
    steps:
      - uses: actions/checkout@v2

      - name: Restore cache
        id: restore
        uses: ./.github/actions/cache
        with:
          job: cts

      - name: Generate CTS
        run: yarn cts:generate

      - name: Run CTS
        run: yarn cts:test
